{"version":3,"file":"static/js/184.106d397a.chunk.js","mappings":"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","sources":["helpers/formatAddress.js","components/AdvertCard/AdvertCard.styled.js","components/AdvertCard/AdvertCard.jsx","components/AdvertsGrid/AdvertsGrid.jsx","components/Spinner/Spinner.jsx","redux/adverts/selectors.js","pages/Catalog.jsx","redux/favorites/selectors.js"],"sourcesContent":["const formatAddress = (address) => {\n  const [city, country] = address.split(\",\").splice(1, 2);\n\n  return {\n    city,\n    country,\n  };\n};\n\nexport default formatAddress;","import styled from \"@emotion/styled\";\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n  height: 268px;\n  margin-bottom: 8px;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 4px;\n`;\n\nexport const AdvertImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 14px;\n`;\n\nexport const DetailsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin-left: 0;\n  margin-bottom: 24px;\n  word-wrap: break-word;\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  overflow: hidden;\n  height: 42px;\n`;\n\nexport const DetailsListItem = styled.li`\n  padding: 2.5px 5px;\n  &:not(:last-child) {\n    border-right: 1px solid #12141780;\n  }\n`;\n\nexport const Details = styled.p`\n  margin: 0;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 0.7;\n  color: #12141780;\n`;\n\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 5px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport const DescriptionItem = styled.p`\n  ${({ isModel }) =>\n    isModel &&\n    \"flex-grow: 1; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\"};\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { formatAddress } from \"helpers\";\nimport { isAdvertFavorite } from \"redux/favorites/selectors\";\nimport { addToFavorites, removeFromFavorites } from \"redux/favorites/slice\";\nimport { Button } from \"@mui/material\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport Paper from \"@mui/material/Paper\";\nimport fallbackImageUrl from \"../../public/images/fallback_sedan.jpg\";\nimport {\n  ImgWrapper,\n  DescriptionWrapper,\n  AdvertImage,\n  Details,\n  DetailsList,\n  DetailsListItem,\n  Description,\n  DescriptionItem,\n} from \"./AdvertCard.styled\";\n\nconst AdvertCard = ({ item }) => {\n  const dispatch = useDispatch();\n  const isFavorite = useSelector((state) => isAdvertFavorite(state, item.id));\n  const { city, country } = formatAddress(item.address);\n\n  const toggleFavorite = () => {\n    if (isFavorite) {\n      dispatch(removeFromFavorites(item));\n    } else {\n      dispatch(addToFavorites(item));\n    }\n  };\n\n  return (\n    <Paper elevation={0} sx={{ height: 426 }}>\n      <ImgWrapper>\n        <AdvertImage\n          alt={`${item.make} ${item.model}`}\n          src={item.img}\n          onError={(e) => {\n            console.log(e);\n            e.target.src = fallbackImageUrl;\n          }}\n        />\n        <Button\n          onClick={toggleFavorite}\n          sx={{ position: \"absolute\", top: 0, right: -5 }}\n        >\n          {isFavorite ? (\n            <FavoriteIcon style={{ color: \"#3470FF\" }} />\n          ) : (\n            <FavoriteBorderIcon style={{ color: \"white\" }} />\n          )}\n        </Button>\n      </ImgWrapper>\n      <DescriptionWrapper>\n        <Description>\n          <DescriptionItem>{item.make}</DescriptionItem>{\" \"}\n          <DescriptionItem isModel style={{ color: \"#3470FF\" }}>\n            {item.model},\n          </DescriptionItem>\n          <DescriptionItem> {item.year}</DescriptionItem>\n        </Description>\n        <DescriptionItem style={{ marginLeft: 5 }}>\n          {item.rentalPrice}\n        </DescriptionItem>\n      </DescriptionWrapper>\n      <div>\n        <DetailsList>\n          <DetailsListItem>\n            <Details>{city}</Details>\n          </DetailsListItem>\n          <DetailsListItem>\n            <Details>{country}</Details>\n          </DetailsListItem>\n          <DetailsListItem>\n            <Details>{item.rentalCompany}</Details>\n          </DetailsListItem>\n          <DetailsListItem>\n            <Details>{item.type}</Details>\n          </DetailsListItem>\n          <DetailsListItem>\n            <Details>{item.make}</Details>\n          </DetailsListItem>\n          <DetailsListItem>\n            <Details>{item.id}</Details>\n          </DetailsListItem>\n          <DetailsListItem>\n            <Details>{item.accessories[0]}</Details>\n          </DetailsListItem>\n        </DetailsList>\n      </div>\n      <Button\n        variant=\"contained\"\n        sx={{ width: \"100%\", backgroundColor: \"#3470FF\", borderRadius: 12 }}\n      >\n        Learn More\n      </Button>\n    </Paper>\n  );\n};\n\nexport default AdvertCard;\n","import AdvertCard from \"components/AdvertCard\";\nimport Grid from \"@mui/material/Grid\";\n\nconst AdvertGrid = ({ items }) => {\n  return (\n    <div>\n      <Grid container spacing={3}>\n        {items.map((item) => (\n          <Grid item xs={3} key={item.id}>\n            <AdvertCard item={item} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default AdvertGrid;\n","import { Blocks } from \"react-loader-spinner\";\nimport { Container } from \"@mui/material\";\n\nconst Spinner = () => {\n  return (\n    <Container\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"100vh\",\n      }}\n    >\n      <Blocks\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n      />\n    </Container>\n  );\n};\n\nexport default Spinner;\n","export const selectAdverts = (state) => state.adverts.items;\n\nexport const selectIsLoading = (state) => state.adverts.isLoading;\n\nexport const selectError = (state) => state.adverts.error;\n","import AdvertGrid from \"components/AdvertsGrid/AdvertsGrid\";\nimport { selectAdverts, selectIsLoading } from \"redux/adverts/selectors\";\nimport { fetchAdverts } from \"redux/adverts/operations\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Spinner from \"components/Spinner\";\n\nconst Catalog = () => {\n  const adverts = useSelector(selectAdverts);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAdverts());\n  }, [dispatch]);\n\n  return isLoading ? <Spinner /> : <AdvertGrid items={adverts} />;\n};\n\nexport default Catalog;\n","export const selectFavorites = (state) => state.favorites.items;\n\nexport const selectFavoritesIsLoading = (state) => state.favorites.isLoading;\n\nexport const isAdvertFavorite = (state, advertId) =>\n  selectFavorites(state).some((item) => item.id === advertId);\n"],"names":["address","_address$split$splice","split","splice","_address$split$splice2","_slicedToArray","city","country","ImgWrapper","styled","div","_templateObject","_taggedTemplateLiteral","DescriptionWrapper","_templateObject2","AdvertImage","img","_templateObject3","DetailsList","ul","_templateObject4","DetailsListItem","li","_templateObject5","Details","p","_templateObject6","Description","_templateObject7","DescriptionItem","_templateObject8","_ref","isModel","item","dispatch","useDispatch","isFavorite","useSelector","state","isAdvertFavorite","id","_formatAddress","formatAddress","_jsxs","Paper","elevation","sx","height","children","_jsx","alt","concat","make","model","src","onError","e","console","log","target","fallbackImageUrl","Button","onClick","removeFromFavorites","addToFavorites","position","top","right","FavoriteIcon","style","color","FavoriteBorderIcon","year","marginLeft","rentalPrice","rentalCompany","type","accessories","variant","width","backgroundColor","borderRadius","items","Grid","container","spacing","map","xs","AdvertCard","Container","display","justifyContent","alignItems","minHeight","Blocks","visible","ariaLabel","wrapperStyle","wrapperClass","selectAdverts","adverts","selectIsLoading","isLoading","useEffect","fetchAdverts","Spinner","AdvertGrid","selectFavorites","favorites","selectFavoritesIsLoading","advertId","some"],"sourceRoot":""}