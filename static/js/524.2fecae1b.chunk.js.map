{"version":3,"file":"static/js/524.2fecae1b.chunk.js","mappings":"4LASA,EATsB,SAACA,GACrB,IAAAC,EAAwBD,EAAQE,MAAM,KAAKC,OAAO,EAAG,GAAEC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAEvD,MAAO,CACLK,KAHSF,EAAA,GAITG,QAJkBH,EAAA,GAMtB,E,SCmBA,EAvBmB,SAAHI,GAAkB,IAAZC,EAAID,EAAJC,KACpBC,EAA0BC,EAAcF,EAAKT,SAArCM,EAAII,EAAJJ,KAAMC,EAAOG,EAAPH,QACd,OACIK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKC,IAAG,GAAAC,OAAKP,EAAKQ,KAAI,KAAAD,OAAIP,EAAKS,OAASC,IAAKV,EAAKW,IAAKC,MAAO,IAAKC,OAAQ,SAE7EV,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CACGJ,EAAKQ,KAAK,IAAER,EAAKS,MAAM,IAAET,EAAKc,SAEjCT,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,EAAKe,YAEXV,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CACGP,EAAK,MAAIC,EAAQ,MAAIE,EAAKgB,cAAc,MAAIhB,EAAKiB,KAAK,KAAG,IACzDjB,EAAKQ,KAAK,MAAIR,EAAKkB,GAAG,MAAIlB,EAAKmB,YAAY,UAKxD,ECxBaC,EAAgB,SAACC,GAAK,OAAKA,EAAMC,QAAQC,KAAM,E,QC2B5D,EArBmB,WACjB,IAAMD,GAAUE,EAAAA,EAAAA,IAAYJ,GACtBK,GAAWC,EAAAA,EAAAA,MAMjB,OALAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACX,GAAG,CAACH,IACJI,QAAQC,IAAIR,IAGVjB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,SACGkB,EAAQS,KAAI,SAAC/B,GAAI,OAChBK,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAC2B,EAAU,CAAChC,KAAMA,KADXA,EAAKkB,GAET,OAKf,ECdA,EATgB,WACd,OACEf,EAAAA,EAAAA,MAAA8B,EAAAA,SAAA,CAAA7B,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,aACLC,EAAAA,EAAAA,KAAC6B,EAAU,MAGjB,C","sources":["helpers/formatAddress.js","components/AdvertCard/AdvertCard.jsx","redux/adverts/selectors.js","components/AdvertsGrid/AdvertsGrid.jsx","pages/Catalog.jsx"],"sourcesContent":["const formatAddress = (address) => {\n  const [city, country] = address.split(\",\").splice(1, 2);\n\n  return {\n    city,\n    country,\n  };\n};\n\nexport default formatAddress;","// import {PropTypes} from \"prop-types\";\nimport { formatAddress } from \"helpers\";\n\nconst AdvertCard = ({ item }) => {\n  const { city, country } = formatAddress(item.address);\n  return (\n      <div>\n        <div>\n          <img alt={`${item.make} ${item.model}`} src={item.img} width={200} height={200}/>\n        </div>\n        <div>\n          <p>\n            {item.make} {item.model},{item.year}\n          </p>\n          <p>{item.price}</p>\n        </div>\n        <div>\n          <p>\n            {city} | {country} | {item.rentalCompany} | {item.type} |{\" \"}\n            {item.make} | {item.id} | {item.accessories[0]}\n          </p>\n        </div>\n      </div>\n  );\n};\n\nexport default AdvertCard;\n\n\n","export const selectAdverts = (state) => state.adverts.items;\n\nexport const selectIsLoading = (state) => state.adverts.isLoading;\n\nexport const selectError = (state) => state.adverts.error;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AdvertCard from \"components/AdvertCard\";\nimport { selectAdverts } from \"redux/adverts/selectors\";\nimport { fetchAdverts } from \"redux/adverts/operations\";\n\nconst AdvertGrid = () => {\n  const adverts = useSelector(selectAdverts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAdverts());\n  }, [dispatch]);\n  console.log(adverts);\n\n  return (\n    <div>\n      <ul>\n        {adverts.map((item) => (\n          <li key={item.id}>\n            <AdvertCard item={item} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AdvertGrid;\n","import AdvertGrid from \"components/AdvertsGrid/AdvertsGrid\";\n\nconst Catalog = () => {\n  return (\n    <>\n      <div>Catalog</div>\n      <AdvertGrid />\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["address","_address$split$splice","split","splice","_address$split$splice2","_slicedToArray","city","country","_ref","item","_formatAddress","formatAddress","_jsxs","children","_jsx","alt","concat","make","model","src","img","width","height","year","price","rentalCompany","type","id","accessories","selectAdverts","state","adverts","items","useSelector","dispatch","useDispatch","useEffect","fetchAdverts","console","log","map","AdvertCard","_Fragment","AdvertGrid"],"sourceRoot":""}