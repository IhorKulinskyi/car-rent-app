{"version":3,"file":"static/js/103.ecf2da53.chunk.js","mappings":"6KASA,EATsB,SAACA,GACrB,IAAAC,EAAwBD,EAAQE,MAAM,KAAKC,OAAO,EAAG,GAAEC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAEvD,MAAO,CACLK,KAHSF,EAAA,GAITG,QAJkBH,EAAA,GAMtB,E,8ECJaI,EAAaC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+BAGvBC,GAAuBC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yF,SCmDvC,EAhDmB,SAAHI,GAAkB,IAAZC,EAAID,EAAJC,KACdC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKC,EAAAA,EAAAA,IAAiBD,EAAOL,EAAKO,GAAG,IAC1EC,EAA0BC,EAAcT,EAAKjB,SAArCM,EAAImB,EAAJnB,KAAMC,EAAOkB,EAAPlB,QAUd,OACEoB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAACnB,EAAU,CAAAoB,SAAA,EACTC,EAAAA,EAAAA,KAAA,OACEC,IAAG,GAAAC,OAAKd,EAAKe,KAAI,KAAAD,OAAId,EAAKgB,OAC1BC,IAAKjB,EAAKkB,IACVC,MAAO,IACPC,OAAQ,OAEVR,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,QAjBS,WAEnBrB,EADEE,GACOoB,EAAAA,EAAAA,IAAoBvB,EAAKO,KAEzBiB,EAAAA,EAAAA,IAAexB,EAAKO,IAEjC,EAWuCV,IAAKD,EAAqBe,SACxDR,GACCS,EAAAA,EAAAA,KAACa,EAAAA,EAAY,KAEbb,EAAAA,EAAAA,KAACc,EAAAA,EAAkB,CAACC,MAAO,CAAEC,MAAO,iBAI1ClB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CACGX,EAAKe,KAAK,IAAEf,EAAKgB,MAAM,IAAEhB,EAAK6B,SAEjCjB,EAAAA,EAAAA,KAAA,KAAAD,SAAIX,EAAK8B,kBAEXlB,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CACGtB,EAAK,MAAIC,EAAQ,MAAIU,EAAK+B,cAAc,MAAI/B,EAAKgC,KAAK,MAAIhC,EAAKe,KAAM,IAAI,KACvEf,EAAKO,GAAG,MAAIP,EAAKiC,YAAY,SAIpCrB,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACa,QAAQ,YAAWvB,SAAC,iBAGlC,ECvCA,EAdmB,SAAHZ,GAAmB,IAAboC,EAAKpC,EAALoC,MACpB,OACEvB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAAD,SACGwB,EAAMC,KAAI,SAACpC,GAAI,OACdY,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACyB,EAAU,CAACrC,KAAMA,KADXA,EAAKO,GAET,OAKf,C,8ECCA,EAbgB,WACd,OACEK,EAAAA,EAAAA,KAAC0B,EAAAA,GAAM,CACLC,SAAS,EACTnB,OAAO,KACPD,MAAM,KACNqB,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,kBAGnB,C,iFCbaC,EAAgB,SAACtC,GAAK,OAAKA,EAAMuC,QAAQT,KAAM,EAE/CU,EAAkB,SAACxC,GAAK,OAAKA,EAAMuC,QAAQE,SAAU,E,iDCwBlE,EAnBgB,WACd,IAAMF,GAAUxC,EAAAA,EAAAA,IAAYuC,GACtBG,GAAY1C,EAAAA,EAAAA,IAAYyC,GACxB5C,GAAWC,EAAAA,EAAAA,MAMjB,OAJA6C,EAAAA,EAAAA,YAAU,WACR9C,GAAS+C,EAAAA,EAAAA,KACX,GAAG,CAAC/C,IAEG6C,GACLlC,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,KAERvC,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAAvC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,aACLC,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CAAChB,MAAOS,MAGzB,C,gICxBO,IAAMQ,EAAqB,SAAC/C,GAAK,OAAKA,EAAMgD,UAAUC,OAAQ,EAExDC,EAAkB,SAAAlD,GAAK,OAAIA,EAAMgD,UAAUlB,KAAM,EAEjDqB,EAA2B,SAAAnD,GAAK,OAAIA,EAAMgD,UAAUP,SAAU,EAE9DxC,EAAmB,SAACD,EAAOoD,GAAQ,OAC9CL,EAAmB/C,GAAOqD,SAASD,EAAU,C","sources":["helpers/formatAddress.js","components/AdvertCard/AdvertCard.styled.js","components/AdvertCard/AdvertCard.jsx","components/AdvertsGrid/AdvertsGrid.jsx","components/Spinner/Spinner.jsx","redux/adverts/selectors.js","pages/Catalog.jsx","redux/favorites/selectors.js"],"sourcesContent":["const formatAddress = (address) => {\n  const [city, country] = address.split(\",\").splice(1, 2);\n\n  return {\n    city,\n    country,\n  };\n};\n\nexport default formatAddress;","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nexport const ImgWrapper = styled.div`\nposition: relative;\n`\nexport const favoriteButtonStyles = css`\nbackground-color: 'transparent';\nposition: absolute;\ntop: 10px;\nleft:10px;\n`","import { useSelector, useDispatch } from \"react-redux\";\nimport { formatAddress } from \"helpers\";\nimport { isAdvertFavorite } from \"redux/favorites/selectors\";\nimport { addToFavorites, removeFromFavorites } from \"redux/favorites/slice\";\nimport { Button } from \"@mui/material\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport { ImgWrapper, favoriteButtonStyles } from \"./AdvertCard.styled\";\n\nconst AdvertCard = ({ item }) => {\n  const dispatch = useDispatch();\n  const isFavorite = useSelector((state) => isAdvertFavorite(state, item.id));\n  const { city, country } = formatAddress(item.address);\n\n  const toggleFavorite = () => {\n    if (isFavorite) {\n      dispatch(removeFromFavorites(item.id));\n    } else {\n      dispatch(addToFavorites(item.id));\n    }\n  };\n\n  return (\n    <div>\n      <ImgWrapper>\n        <img\n          alt={`${item.make} ${item.model}`}\n          src={item.img}\n          width={200}\n          height={200}\n        />\n        <Button onClick={toggleFavorite} css={favoriteButtonStyles}>\n          {isFavorite ? (\n            <FavoriteIcon />\n          ) : (\n            <FavoriteBorderIcon style={{ color: \"white\" }} />\n          )}\n        </Button>\n      </ImgWrapper>\n      <div>\n        <p>\n          {item.make} {item.model},{item.year}\n        </p>\n        <p>{item.rentalPrice}</p>\n      </div>\n      <div>\n        <p>\n          {city} | {country} | {item.rentalCompany} | {item.type} | {item.make}{\" \"}\n          | {item.id} | {item.accessories[0]}\n        </p>\n      </div>\n\n      <Button variant=\"contained\">Learn More</Button>\n    </div>\n  );\n};\n\nexport default AdvertCard;\n","import AdvertCard from \"components/AdvertCard\";\n\nconst AdvertGrid = ({ items }) => {\n  return (\n    <div>\n      <ul>\n        {items.map((item) => (\n          <li key={item.id}>\n            <AdvertCard item={item} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AdvertGrid;\n","import { Blocks } from 'react-loader-spinner';\n\nconst Spinner = () => {\n  return (\n    <Blocks\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n    />\n  );\n};\n\nexport default Spinner;\n","export const selectAdverts = (state) => state.adverts.items;\n\nexport const selectIsLoading = (state) => state.adverts.isLoading;\n\nexport const selectError = (state) => state.adverts.error;\n","import AdvertGrid from \"components/AdvertsGrid/AdvertsGrid\";\nimport { selectAdverts, selectIsLoading } from \"redux/adverts/selectors\";\nimport { fetchAdverts } from \"redux/adverts/operations\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Spinner from \"components/Spinner\";\n\nconst Catalog = () => {\n  const adverts = useSelector(selectAdverts);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAdverts());\n  }, [dispatch]);\n\n  return isLoading ? (\n    <Spinner />\n  ) : (\n    <>\n      <div>Catalog</div>\n      <AdvertGrid items={adverts} />\n    </>\n  );\n};\n\nexport default Catalog;\n","export const selectFavoritesIds = (state) => state.favorites.itemIds;\n\nexport const selectFavorites = state => state.favorites.items;\n\nexport const selectFavoritesIsLoading = state => state.favorites.isLoading;\n\nexport const isAdvertFavorite = (state, advertId) =>\n  selectFavoritesIds(state).includes(advertId);\n"],"names":["address","_address$split$splice","split","splice","_address$split$splice2","_slicedToArray","city","country","ImgWrapper","styled","div","_templateObject","_taggedTemplateLiteral","favoriteButtonStyles","css","_templateObject2","_ref","item","dispatch","useDispatch","isFavorite","useSelector","state","isAdvertFavorite","id","_formatAddress","formatAddress","_jsxs","children","_jsx","alt","concat","make","model","src","img","width","height","Button","onClick","removeFromFavorites","addToFavorites","FavoriteIcon","FavoriteBorderIcon","style","color","year","rentalPrice","rentalCompany","type","accessories","variant","items","map","AdvertCard","Blocks","visible","ariaLabel","wrapperStyle","wrapperClass","selectAdverts","adverts","selectIsLoading","isLoading","useEffect","fetchAdverts","Spinner","_Fragment","AdvertGrid","selectFavoritesIds","favorites","itemIds","selectFavorites","selectFavoritesIsLoading","advertId","includes"],"sourceRoot":""}